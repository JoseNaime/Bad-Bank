{"ast":null,"code":"var _jsxFileName = \"/Users/jose_n/Library/Mobile Documents/com~apple~CloudDocs/WebStorm Projects/MITxPro_MERN_Course/banking-app/client/src/components/Deposit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { UserContext } from \"../App\";\nimport TransactionHistoryCard from \"./TransactionHistoryCard\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Deposit() {\n  _s();\n\n  const {\n    userContext,\n    setUserContext\n  } = React.useContext(UserContext);\n  const [userInput, setUserInput] = useState(null);\n  const [error, setError] = useState(\"\");\n  const user = userContext.users.find(user => user.id === userContext.currentUser);\n\n  function handleDeposit(e) {\n    e.preventDefault();\n    const amount = e.target.elements.amount.value;\n    const newBalance = Number(user.balance) + Number(amount);\n    setUserContext({ ...userContext,\n      users: userContext.users.map(user => user.id === userContext.currentUser ? { ...user,\n        balance: newBalance,\n        deposits: [...user.deposits, {\n          amount: amount,\n          date: new Date().toLocaleDateString()\n        }]\n      } : user)\n    });\n    setUserInput(\"\");\n    alert(\"Deposit completed successfully!\");\n  }\n\n  const userDepositsElements = user && user.deposits.map((deposit, i) => {\n    return /*#__PURE__*/_jsxDEV(TransactionHistoryCard, {\n      id: i,\n      amount: deposit.amount,\n      date: deposit.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      header: \"Deposit\",\n      userContext: userContext,\n      handleSubmit: handleDeposit,\n      userInput: userInput,\n      setUserInput: setUserInput,\n      error: error,\n      setError: setError,\n      transactionHistoryElements: userDepositsElements,\n      historyLength: user ? user.deposits.length : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Deposit, \"0daNC4lX7VN9dmwAvnXr3hc0nYM=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/jose_n/Library/Mobile Documents/com~apple~CloudDocs/WebStorm Projects/MITxPro_MERN_Course/banking-app/client/src/components/Deposit.jsx"],"names":["React","useState","UserContext","TransactionHistoryCard","Card","Deposit","userContext","setUserContext","useContext","userInput","setUserInput","error","setError","user","users","find","id","currentUser","handleDeposit","e","preventDefault","amount","target","elements","value","newBalance","Number","balance","map","deposits","date","Date","toLocaleDateString","alert","userDepositsElements","deposit","i","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,QAA1B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgCP,KAAK,CAACQ,UAAN,CAAiBN,WAAjB,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,IAAI,GAAGP,WAAW,CAACQ,KAAZ,CAAkBC,IAAlB,CAAuBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYV,WAAW,CAACW,WAAvD,CAAb;;AAEA,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,MAAlB,CAAyBG,KAAxC;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACb,IAAI,CAACc,OAAN,CAAN,GAAuBD,MAAM,CAACL,MAAD,CAAhD;AACAd,IAAAA,cAAc,CAAC,EACX,GAAGD,WADQ;AAEXQ,MAAAA,KAAK,EAAER,WAAW,CAACQ,KAAZ,CAAkBc,GAAlB,CAAsBf,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYV,WAAW,CAACW,WAAxB,GAAsC,EACvE,GAAGJ,IADoE;AAEvEc,QAAAA,OAAO,EAAEF,UAF8D;AAGvEI,QAAAA,QAAQ,EAAE,CAAC,GAAGhB,IAAI,CAACgB,QAAT,EAAmB;AACzBR,UAAAA,MAAM,EAAEA,MADiB;AAEzBS,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AAFmB,SAAnB;AAH6D,OAAtC,GAOjCnB,IAPG;AAFI,KAAD,CAAd;AAYAH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAuB,IAAAA,KAAK,CAAC,iCAAD,CAAL;AACH;;AAGD,QAAMC,oBAAoB,GAAGrB,IAAI,IAAIA,IAAI,CAACgB,QAAL,CAAcD,GAAd,CAAkB,CAACO,OAAD,EAAUC,CAAV,KAAgB;AACnE,wBACI,QAAC,sBAAD;AAAwB,MAAA,EAAE,EAAEA,CAA5B;AAA+B,MAAA,MAAM,EAAED,OAAO,CAACd,MAA/C;AAAuD,MAAA,IAAI,EAAEc,OAAO,CAACL;AAArE;AAAA;AAAA;AAAA;AAAA,YADJ;AAEH,GAHoC,CAArC;AAKA,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,MAAM,EAAE,SADZ;AAEI,MAAA,WAAW,EAAExB,WAFjB;AAGI,MAAA,YAAY,EAAEY,aAHlB;AAII,MAAA,SAAS,EAAET,SAJf;AAKI,MAAA,YAAY,EAAEC,YALlB;AAMI,MAAA,KAAK,EAAEC,KANX;AAOI,MAAA,QAAQ,EAAEC,QAPd;AAQI,MAAA,0BAA0B,EAAEsB,oBARhC;AASI,MAAA,aAAa,EAAErB,IAAI,GAAGA,IAAI,CAACgB,QAAL,CAAcQ,MAAjB,GAA0B;AATjD;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH;;GA9CQhC,O;;KAAAA,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport {UserContext} from \"../App\";\nimport TransactionHistoryCard from \"./TransactionHistoryCard\";\nimport Card from \"./Card\";\n\nfunction Deposit() {\n    const {userContext, setUserContext} = React.useContext(UserContext);\n    const [userInput, setUserInput] = useState(null)\n    const [error, setError] = useState(\"\")\n    const user = userContext.users.find(user => user.id === userContext.currentUser)\n\n    function handleDeposit(e) {\n        e.preventDefault();\n        const amount = e.target.elements.amount.value;\n        const newBalance = Number(user.balance) + Number(amount);\n        setUserContext({\n            ...userContext,\n            users: userContext.users.map(user => user.id === userContext.currentUser ? {\n                ...user,\n                balance: newBalance,\n                deposits: [...user.deposits, {\n                    amount: amount,\n                    date: new Date().toLocaleDateString()\n                }]\n            } : user)\n\n        });\n        setUserInput(\"\")\n        alert(\"Deposit completed successfully!\");\n    }\n\n\n    const userDepositsElements = user && user.deposits.map((deposit, i) => {\n        return (\n            <TransactionHistoryCard id={i} amount={deposit.amount} date={deposit.date} />)\n    })\n\n    return (\n        <>\n            <Card\n                header={\"Deposit\"}\n                userContext={userContext}\n                handleSubmit={handleDeposit}\n                userInput={userInput}\n                setUserInput={setUserInput}\n                error={error}\n                setError={setError}\n                transactionHistoryElements={userDepositsElements}\n                historyLength={user ? user.deposits.length : 0} />\n        </>\n    );\n}\n\nexport default Deposit;"]},"metadata":{},"sourceType":"module"}