{"ast":null,"code":"var _jsxFileName = \"/Users/jose_n/Library/Mobile Documents/com~apple~CloudDocs/WebStorm Projects/MITxPro_MERN_Course/banking-app/client/src/components/CreateAccountForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  errors: {\n    \"username\": \"\",\n    \"email\": \"\",\n    \"password\": \"\"\n  }\n};\n\nfunction CreateAccountForm(_ref) {\n  _s();\n\n  let {\n    setCreatingAccount,\n    userContext,\n    setUserContext\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [submitIsDisabled, setSubmitIsDisabled] = React.useState(true);\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"Field Change\":\n        return { ...state,\n          [action.name]: action.value\n        };\n\n      case \"Form Error\":\n        return { ...state,\n          errors: { ...state.errors,\n            [action.field]: action.message\n          }\n        };\n\n      case \"Clear Form Error\":\n        return { ...state,\n          errors: { ...state.errors,\n            [action.field]: \"\"\n          }\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  function handleSubmitForm(event) {\n    event.preventDefault();\n    const user = {\n      id: userContext.users.length,\n      ...state,\n      balance: 0,\n      deposits: [],\n      withdraws: []\n    };\n    delete user.errors;\n    setUserContext({\n      currentUser: user.id,\n      users: [...userContext.users, user]\n    });\n    setCreatingAccount(false);\n    console.log(user);\n  }\n\n  function handleInputChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    dispatch({\n      type: \"Field Change\",\n      name,\n      value\n    });\n  }\n\n  function isThereAnyFormError() {\n    return !Object.values(state.errors).some(error => error !== \"\");\n  }\n\n  function validateField(fieldName, value) {\n    console.log(fieldName, value.length);\n\n    switch (fieldName) {\n      case \"username\":\n        if (value.length === 0) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Please enter a username.\"\n        });else if (value.length < 3) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Username must be at least 3 characters.\"\n        });else if (value.length > 20) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Username must be less than 20 characters.\"\n        });\n        break;\n\n      case \"email\":\n        if (value.length === 0) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Please enter an email.\"\n        });else if (!value.includes(\"@\")) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Please enter a valid email.\"\n        });\n        break;\n\n      case \"password\":\n        if (value.length === 0) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Please enter a password.\"\n        });else if (value.length < 8) dispatch({\n          type: \"Form Error\",\n          field: fieldName,\n          message: \"Password must be at least 8 characters.\"\n        });\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"card-title mb-3 text-center\",\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      style: {\n        width: \"350px\",\n        margin: \"auto\"\n      },\n      onSubmit: handleSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"fw-bold\",\n          \"aria-labelledby\": \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          \"data-testid\": \"username-input\",\n          className: \"form-control\",\n          name: \"username\",\n          value: state.username,\n          onChange: e => handleInputChange(e),\n          onBlur: e => validateField(\"username\", e.target.value),\n          onFocus: () => dispatch({\n            type: \"Clear Form Error\",\n            field: \"username\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), state.errors[\"username\"] ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-8 fw-light text-danger\",\n          children: state.errors[\"username\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"fw-bold\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"data-testid\": \"email-input\",\n          className: \"form-control\",\n          name: \"email\",\n          value: state.email,\n          onChange: e => handleInputChange(e),\n          onBlur: e => validateField(\"email\", e.target.value),\n          onFocus: () => dispatch({\n            type: \"Clear Form Error\",\n            field: \"email\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), state.errors[\"email\"] ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-8 fw-light text-danger\",\n          children: state.errors[\"email\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 46\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"fw-bold\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          \"data-testid\": \"password-input\",\n          className: \"form-control\",\n          name: \"password\",\n          value: state.password,\n          onChange: e => handleInputChange(e),\n          onBlur: e => validateField(\"password\", e.target.value),\n          onFocus: () => dispatch({\n            type: \"Clear Form Error\",\n            field: \"password\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), state.errors[\"password\"] ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-8 fw-light text-danger\",\n          children: state.errors[\"password\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isThereAnyFormError() || state.name === \"\" || state.email === \"\" || state.password === \"\",\n        \"data-testid\": \"create-account-button\",\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccountForm, \"vs6Y0aU87KXDaZPC0pvRQBwy77U=\");\n\n_c = CreateAccountForm;\nexport default CreateAccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccountForm\");","map":{"version":3,"sources":["/Users/jose_n/Library/Mobile Documents/com~apple~CloudDocs/WebStorm Projects/MITxPro_MERN_Course/banking-app/client/src/components/CreateAccountForm.jsx"],"names":["React","useReducer","initialState","username","email","password","errors","CreateAccountForm","setCreatingAccount","userContext","setUserContext","state","dispatch","reducer","submitIsDisabled","setSubmitIsDisabled","useState","action","type","name","value","field","message","handleSubmitForm","event","preventDefault","user","id","users","length","balance","deposits","withdraws","currentUser","console","log","handleInputChange","target","isThereAnyFormError","Object","values","some","error","validateField","fieldName","includes","width","margin","e"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\n\nconst initialState = {\n    username: \"\", email: \"\", password: \"\", errors: {\"username\": \"\", \"email\": \"\", \"password\": \"\"},\n};\n\nfunction CreateAccountForm({setCreatingAccount, userContext, setUserContext}) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [submitIsDisabled, setSubmitIsDisabled] = React.useState(true);\n\n    function reducer(state, action) {\n        switch (action.type) {\n            case \"Field Change\":\n                return {...state, [action.name]: action.value};\n            case \"Form Error\":\n                return {...state, errors: {...state.errors, [action.field]: action.message}};\n            case \"Clear Form Error\":\n                return {...state, errors: {...state.errors, [action.field]: \"\"}};\n            default:\n                return state;\n        }\n    }\n\n    function handleSubmitForm(event) {\n        event.preventDefault()\n        const user = {id: userContext.users.length, ...state, balance: 0, deposits: [], withdraws: []};\n        delete user.errors\n\n        setUserContext({\n            currentUser: user.id, users: [...userContext.users, user]\n        })\n        setCreatingAccount(false);\n        console.log(user);\n    }\n\n    function handleInputChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        dispatch({type: \"Field Change\", name, value});\n    }\n\n    function isThereAnyFormError() {\n        return !Object.values(state.errors).some(error => error !== \"\");\n    }\n\n    function validateField(fieldName, value) {\n        console.log(fieldName, value.length);\n        switch (fieldName) {\n            case \"username\":\n                if (value.length === 0) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Please enter a username.\"\n                });\n                else if (value.length < 3) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Username must be at least 3 characters.\"\n                });\n                else if (value.length > 20) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Username must be less than 20 characters.\"\n                });\n                break;\n            case \"email\":\n                if (value.length === 0) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Please enter an email.\"\n                });\n                else if (!value.includes(\"@\")) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Please enter a valid email.\"\n                });\n\n                break;\n            case \"password\":\n                if (value.length === 0) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Please enter a password.\"\n                });\n                else if (value.length < 8) dispatch({\n                    type: \"Form Error\",\n                    field: fieldName,\n                    message: \"Password must be at least 8 characters.\"\n                });\n\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <h1 className=\"card-title mb-3 text-center\">Create Account</h1>\n            <form className=\"form\" style={{width: \"350px\", margin: \"auto\"}} onSubmit={handleSubmitForm}>\n                <div className=\"form-group\">\n                    <label className=\"fw-bold\" aria-labelledby=\"username\">Username</label>\n                    <input type=\"name\"\n                           data-testid=\"username-input\"\n                           className=\"form-control\"\n                           name=\"username\"\n                           value={state.username}\n                           onChange={(e) => handleInputChange(e)}\n                           onBlur={(e) => validateField(\"username\", e.target.value)}\n                           onFocus={() => dispatch({type: \"Clear Form Error\", field: \"username\"})}\n                    />\n                    {state.errors[\"username\"] ?\n                        <p className=\"fs-8 fw-light text-danger\">{state.errors[\"username\"]}</p> : \"\"}\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"fw-bold\">Email</label>\n                    <input type=\"text\"\n                           data-testid=\"email-input\"\n                           className=\"form-control\"\n                           name=\"email\"\n                           value={state.email}\n                           onChange={(e) => handleInputChange(e)}\n                           onBlur={(e) => validateField(\"email\", e.target.value)}\n                           onFocus={() => dispatch({type: \"Clear Form Error\", field: \"email\"})}\n                    />\n                    {state.errors[\"email\"] ? <p className=\"fs-8 fw-light text-danger\">{state.errors[\"email\"]}</p> : \"\"}\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"fw-bold\">Password</label>\n                    <input type=\"password\"\n                           data-testid=\"password-input\"\n                           className=\"form-control\"\n                           name=\"password\"\n                           value={state.password}\n                           onChange={(e) => handleInputChange(e)}\n                           onBlur={(e) => validateField(\"password\", e.target.value)}\n                           onFocus={() => dispatch({type: \"Clear Form Error\", field: \"password\"})}\n                    />\n                    {state.errors[\"password\"] ?\n                        <p className=\"fs-8 fw-light text-danger\">{state.errors[\"password\"]}</p> : \"\"}\n                </div>\n                <button disabled={(!isThereAnyFormError() || state.name === \"\" || state.email === \"\" || state.password === \"\")}\n                        data-testid=\"create-account-button\"\n                        type=\"submit\"\n                        className=\"btn btn-primary\">Create\n                                                    Account\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateAccountForm;"]},"metadata":{},"sourceType":"module"}